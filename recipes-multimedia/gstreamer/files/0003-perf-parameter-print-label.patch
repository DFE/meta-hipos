From 1ce7ad41c6a5eecfbbd1e43b7af5dc4214c7f309 Mon Sep 17 00:00:00 2001
From: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>
Date: Thu, 11 May 2017 11:14:37 +0200
Subject: [PATCH] perf: Add parameter print-label

Parameter print-label adds a custom-made label to output.

Signed-off-by: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>

---
 src/perf/gstperf.c | 19 +++++++++++++++++--
 src/perf/gstperf.h |  1 +
 2 files changed, 18 insertions(+), 2 deletions(-)

diff --git a/src/perf/gstperf.c b/src/perf/gstperf.c
index 4eb580a..c51d5d4 100644
--- a/src/perf/gstperf.c
+++ b/src/perf/gstperf.c
@@ -48,7 +48,8 @@ GST_DEBUG_CATEGORY_STATIC (gst_perf_debug);
 enum
 {
   PROP_0,
-  PROP_PRINT_ARM_LOAD
+  PROP_PRINT_ARM_LOAD,
+  PROP_PRINT_LABEL
 };
 
 /* class initialization */
@@ -84,6 +85,11 @@ gst_perf_class_init (GstPerfClass * klass)
           "Print the CPU load info", DEFAULT_PRINT_ARM_LOAD, 
           G_PARAM_WRITABLE));
           
+  g_object_class_install_property (gobject_class, PROP_PRINT_LABEL,
+      g_param_spec_string ("print-label", "Print label",
+          "Print given label", 0,
+          G_PARAM_WRITABLE));
+
   base_transform_class->start = GST_DEBUG_FUNCPTR (gst_perf_start);
   base_transform_class->stop = GST_DEBUG_FUNCPTR (gst_perf_stop);
   base_transform_class->transform_ip =
@@ -109,6 +115,7 @@ gst_perf_init (GstPerf * perf)
   perf->prev_cpu_total = 0;
   perf->prev_cpu_idle = 0;
   perf->print_arm_load = FALSE;
+  perf->print_label = 0;
   gst_base_transform_set_gap_aware (GST_BASE_TRANSFORM_CAST (perf), TRUE);
   gst_base_transform_set_passthrough (GST_BASE_TRANSFORM_CAST (perf), TRUE);
 }
@@ -123,6 +130,9 @@ gst_perf_set_property (GObject * object, guint property_id,
     case PROP_PRINT_ARM_LOAD:
       perf->print_arm_load = g_value_get_boolean(value);
       break;
+    case PROP_PRINT_LABEL:
+      perf->print_label = g_value_dup_string(value);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, property_id, pspec);
       break;
@@ -254,9 +264,14 @@ gst_perf_transform_ip (GstBaseTransform * trans, GstBuffer * buf)
       guint32 cpu_load;
       gst_perf_cpu_get_load(perf, &cpu_load);
       idx += g_snprintf (&info[idx], GST_PERF_MSG_MAX_SIZE - idx,
-          "; CPU: %d; ", cpu_load);
+          "; CPU: %d", cpu_load);
     }
     
+    if (perf->print_label) {
+      idx += g_snprintf (&info[idx], GST_PERF_MSG_MAX_SIZE - idx,
+          " Label: %s; ", perf->print_label);
+    }
+
     gst_element_post_message(
         (GstElement *)perf,
         gst_message_new_info((GstObject *)perf, perf->error, 
diff --git a/src/perf/gstperf.h b/src/perf/gstperf.h
index 5aaa407..293b67d 100644
--- a/src/perf/gstperf.h
+++ b/src/perf/gstperf.h
@@ -54,6 +54,7 @@ struct _GstPerf
   guint32 prev_cpu_idle;
   /* Properties */
   gboolean print_arm_load;
+  const gchar* print_label;
 };
 
 struct _GstPerfClass
