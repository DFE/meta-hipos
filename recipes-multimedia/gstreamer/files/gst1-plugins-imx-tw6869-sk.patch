diff -uprN Freescale-gstreamer-imx-0a73304/src/v4l2src/v4l2_buffer_pool.c Freescale-gstreamer-imx-sk/src/v4l2src/v4l2_buffer_pool.c
--- Freescale-gstreamer-imx-0a73304/src/v4l2src/v4l2_buffer_pool.c	2015-02-01 20:55:28.000000000 +0300
+++ Freescale-gstreamer-imx-sk/src/v4l2src/v4l2_buffer_pool.c	2015-02-06 08:17:12.000000000 +0300
@@ -166,10 +166,7 @@ static GstFlowReturn gst_imx_v4l2_buffer
 	g_assert(meta->mem);
 
 	phys_mem_meta = GST_IMX_PHYS_MEM_META_ADD(buf);
-	phys_mem_meta->phys_addr = meta->vbuffer.m.offset;
-
-	/* Safeguard to catch data loss if in any future i.MX version the types do not match */
-	g_assert(meta->vbuffer.m.offset == (__u32)(phys_mem_meta->phys_addr));
+	phys_mem_meta->phys_addr = (*(__u32 *)meta->mem);
 
 	if (pool->add_videometa)
 	{
diff -uprN Freescale-gstreamer-imx-0a73304/src/v4l2src/v4l2src.c Freescale-gstreamer-imx-sk/src/v4l2src/v4l2src.c
--- Freescale-gstreamer-imx-0a73304/src/v4l2src/v4l2src.c	2015-02-01 20:55:28.000000000 +0300
+++ Freescale-gstreamer-imx-sk/src/v4l2src/v4l2src.c	2015-02-07 12:52:02.000000000 +0300
@@ -33,11 +33,11 @@
 #include "v4l2_buffer_pool.h"
 
 #define DEFAULT_CAPTURE_MODE 0
-#define DEFAULT_FRAMERATE_NUM 30
+#define DEFAULT_FRAMERATE_NUM 0
 #define DEFAULT_FRAMERATE_DEN 1
 #define DEFAULT_INPUT 1
 #define DEFAULT_DEVICE "/dev/video0"
-#define DEFAULT_QUEUE_SIZE 6
+#define DEFAULT_QUEUE_SIZE 8
 
 enum
 {
@@ -109,22 +109,20 @@ static gint gst_imx_v4l2src_capture_setu
 		}
 	}
 
-	fszenum.index = v4l2src->capture_mode;
-	fszenum.pixel_format = V4L2_PIX_FMT_YUV420;
-	if (ioctl(fd_v4l, VIDIOC_ENUM_FRAMESIZES, &fszenum) < 0) {
-		GST_ERROR_OBJECT(v4l2src, "VIDIOC_ENUM_FRAMESIZES failed: %s", strerror(errno));
-		close(fd_v4l);
-		return -1;
+	if (v4l2src->fps_n == 0) {
+		if (id & V4L2_STD_525_60)
+			v4l2src->fps_n = 30;
+		else
+			v4l2src->fps_n = 25;
 	}
-	v4l2src->capture_width = fszenum.discrete.width;
-	v4l2src->capture_height = fszenum.discrete.height;
-	GST_INFO_OBJECT(v4l2src, "capture mode %d: %dx%d",
-			v4l2src->capture_mode,
-			v4l2src->capture_width, v4l2src->capture_height);
 
-	input = v4l2src->input;
-	if (ioctl(fd_v4l, VIDIOC_S_INPUT, &input) < 0) {
-		GST_ERROR_OBJECT(v4l2src, "VIDIOC_S_INPUT failed: %s", strerror(errno));
+	fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
+	fmt.fmt.pix.pixelformat = V4L2_PIX_FMT_UYVY;
+	fmt.fmt.pix.bytesperline = 0;
+	fmt.fmt.pix.priv = 0;
+	fmt.fmt.pix.sizeimage = 0;
+	if (ioctl(fd_v4l, VIDIOC_S_FMT, &fmt) < 0) {
+		GST_ERROR_OBJECT(v4l2src, "VIDIOC_S_FMT failed: %s", strerror(errno));
 		close(fd_v4l);
 		return -1;
 	}
@@ -139,17 +137,6 @@ static gint gst_imx_v4l2src_capture_setu
 		return -1;
 	}
 
-	fmt.type = V4L2_BUF_TYPE_VIDEO_CAPTURE;
-	fmt.fmt.pix.pixelformat = V4L2_PIX_FMT_YUV420;
-	fmt.fmt.pix.bytesperline = 0;
-	fmt.fmt.pix.priv = 0;
-	fmt.fmt.pix.sizeimage = 0;
-	if (ioctl(fd_v4l, VIDIOC_S_FMT, &fmt) < 0) {
-		GST_ERROR_OBJECT(v4l2src, "VIDIOC_S_FMT failed: %s", strerror(errno));
-		close(fd_v4l);
-		return -1;
-	}
-
 	return fd_v4l;
 }
 
@@ -175,6 +162,12 @@ static gboolean gst_imx_v4l2src_start(Gs
 		return FALSE;
 	}
 
+	v4l2src->capture_width = fmt.fmt.pix.width;
+	v4l2src->capture_height = fmt.fmt.pix.height;
+	GST_INFO_OBJECT(v4l2src, "capture mode %d: %dx%d",
+			v4l2src->capture_mode,
+			v4l2src->capture_width, v4l2src->capture_height);
+
 	GST_DEBUG_OBJECT(v4l2src, "width = %d", fmt.fmt.pix.width);
 	GST_DEBUG_OBJECT(v4l2src, "height = %d", fmt.fmt.pix.height);
 	GST_DEBUG_OBJECT(v4l2src, "sizeimage = %d", fmt.fmt.pix.sizeimage);
@@ -287,7 +280,8 @@ static gboolean gst_imx_v4l2src_negotiat
 	 * we already performed setup, so that is what will be streamed */
 
 	caps = gst_caps_new_simple("video/x-raw",
-			"format", G_TYPE_STRING, "I420",
+			"format", G_TYPE_STRING, "UYVY",
+			"interlace-mode", G_TYPE_STRING, "interleaved",
 			"width", G_TYPE_INT, v4l2src->capture_width,
 			"height", G_TYPE_INT, v4l2src->capture_height,
 			"framerate", GST_TYPE_FRACTION, v4l2src->fps_n, v4l2src->fps_d,
@@ -307,7 +301,8 @@ static GstCaps *gst_imx_v4l2src_get_caps
 	GST_INFO_OBJECT(v4l2src, "get caps filter %" GST_PTR_FORMAT, (gpointer)filter);
 
 	caps = gst_caps_new_simple("video/x-raw",
-			"format", G_TYPE_STRING, "I420",
+			"format", G_TYPE_STRING, "UYVY",
+			"interlace-mode", G_TYPE_STRING, "interleaved",
 			"width", GST_TYPE_INT_RANGE, 16, G_MAXINT,
 			"height", GST_TYPE_INT_RANGE, 16, G_MAXINT,
 			"framerate", GST_TYPE_FRACTION_RANGE, 0, 1, 100, 1,
