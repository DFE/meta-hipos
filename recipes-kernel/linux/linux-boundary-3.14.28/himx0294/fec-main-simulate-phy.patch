From 62f03cb2253fd92139e9287f5b06ee191b26b2a2 Mon Sep 17 00:00:00 2001
From: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>
Date: Tue, 8 Sep 2015 12:22:08 +0200
Subject: [PATCH] net: fec_main: Simulate phy

On himx0294 board fec is direct connected with a switch. And there is not phy.
Add a fixed phy, which simulate a 1000Mbit/s full duplex connection.

Signed-off-by: Mario Schuknecht <mario.schuknecht@dresearch-fe.de>
---
 drivers/net/ethernet/freescale/fec_main.c | 91 ++++++++++++++++++++++++++++++-
 1 file changed, 89 insertions(+), 2 deletions(-)

diff --git a/drivers/net/ethernet/freescale/fec_main.c b/drivers/net/ethernet/freescale/fec_main.c
index 3e56492..d16a45e 100644
--- a/drivers/net/ethernet/freescale/fec_main.c
+++ b/drivers/net/ethernet/freescale/fec_main.c
@@ -1845,6 +1845,85 @@ static int fec_enet_mdio_write(struct mii_bus *bus, int mii_id, int regnum,
 	return 0;
 }
 
+#define SMI_PHY_COMMAND_REGISTER 0x18
+#define SMI_PHY_DATA_REGISTER    0x19
+#define MARVELL_GLOBAL2_ADDR 0x1C
+#define SMI_BUSY_BIT 15
+
+static int is_direct_switch = 0;
+
+static u16 fixed_regs[32] = {
+       0x1140, /* 0x0 MII_BMCR */
+       0x796D, /* 0x1 MII_BMSR */
+       0x1234, /* 0x2 MII_PHYSID1 */
+       0x5678, /* 0x3 MII_PHYSID2 */
+       0x05E1, /* 0x4 MII_ADVERTISE */
+       0xC5E1, /* 0x5 MII_LPA */
+       0, 0, 0,
+       0x0E00, /* 0x9 MII_CTRL1000 */
+       0x7800, /* 0xa MII_STAT1000 */
+       0, 0, 0, 0,
+       0x3000, /* 0xf MII_ESTATUS */
+};
+
+static int my_fec_enet_mdio_read(struct mii_bus *bus, int phyaddr, int phyreg)
+{
+       int data = 0;
+
+       if(!is_direct_switch) {
+               return fec_enet_mdio_read(bus, phyaddr, phyreg);
+       }
+
+       if(0 == phyaddr) {
+               /* PHY fake */
+               data = fixed_regs[phyreg & 0x1F];
+       } else if(phyaddr & 0x8000) {
+               int cmd = 0x9800;
+               cmd |= ((phyaddr & 0x1F) << 5);
+               cmd |= (phyreg & 0x1F);
+               fec_enet_mdio_write(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_COMMAND_REGISTER, cmd);
+
+               for (;;) {
+                       if (!(fec_enet_mdio_read(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_COMMAND_REGISTER) &
+                               (1 << SMI_BUSY_BIT))) {
+                               break;
+                       }
+               }
+               data = fec_enet_mdio_read(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_DATA_REGISTER);
+       } else {
+               data = fec_enet_mdio_read(bus, phyaddr & 0x7fff, phyreg);
+       }
+       return data;
+}
+
+static int my_fec_enet_mdio_write(struct mii_bus *bus, int phyaddr, int phyreg, u16 phydata)
+{
+       if(!is_direct_switch) {
+               return fec_enet_mdio_write(bus, phyaddr, phyreg, phydata);
+       }
+
+       if(0 == phyaddr) {
+               /* PHY fake: nothing to do */
+       } else if(phyaddr & 0x8000) {
+               int cmd = 0x9400;
+
+               cmd |= ((phyaddr & 0x1F) << 5);
+               cmd |= (phyreg & 0x1F);
+
+               fec_enet_mdio_write(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_DATA_REGISTER, phydata);
+               fec_enet_mdio_write(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_COMMAND_REGISTER, cmd);
+               for (;;) {
+                       if (!(fec_enet_mdio_read(bus, MARVELL_GLOBAL2_ADDR, SMI_PHY_COMMAND_REGISTER) &
+                               (1 << SMI_BUSY_BIT))) {
+                               break;
+                       }
+               }
+       } else {
+               fec_enet_mdio_write(bus, phyaddr & 0x7fff, phyreg, phydata);
+       }
+       return 0;
+}
+
 static int fec_enet_clk_enable(struct net_device *ndev, bool enable)
 {
 	struct fec_enet_private *fep = netdev_priv(ndev);
@@ -2054,8 +2133,8 @@ static int fec_enet_mii_init(struct platform_device *pdev, int phy_irq)
 	}
 
 	fep->mii_bus->name = "fec_enet_mii_bus";
-	fep->mii_bus->read = fec_enet_mdio_read;
-	fep->mii_bus->write = fec_enet_mdio_write;
+	fep->mii_bus->read = my_fec_enet_mdio_read;
+	fep->mii_bus->write = my_fec_enet_mdio_write;
 	snprintf(fep->mii_bus->id, MII_BUS_ID_SIZE, "%s-%x",
 		pdev->name, fep->dev_id + 1);
 	fep->mii_bus->priv = fep;
@@ -3336,6 +3415,14 @@ fec_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, ndev);
 
+	if (of_get_property(np, "direct-switch", NULL)) {
+		is_direct_switch = 1;
+		pr_info("fec: direct-switch\n");
+	} else { 
+		is_direct_switch = 0;
+		pr_info("fec: NO direct-switch\n");
+	}
+
 	if (of_get_property(np, "fsl,magic-packet", NULL))
 		fep->wol_flag |= FEC_WOL_HAS_MAGIC_PACKET;
 
-- 
2.1.4

