From 4e2a7ecfdc90f275226136844824aa289cfca776 Mon Sep 17 00:00:00 2001
From: "Yuk-Lin Soo, Alex" <YukLin.Soo@kontron.com>
Date: Thu, 18 May 2017 17:45:02 +0800
Subject: [PATCH] Update CPLD I2C Bus maximum frequency

---
 drivers/i2c/busses/i2c-kempld.c | 25 ++++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

diff --git a/drivers/i2c/busses/i2c-kempld.c b/drivers/i2c/busses/i2c-kempld.c
index 25993d2..f1eb186 100644
--- a/drivers/i2c/busses/i2c-kempld.c
+++ b/drivers/i2c/busses/i2c-kempld.c
@@ -1,7 +1,7 @@
 /*
  * I2C bus driver for Kontron COM modules
  *
- * Copyright (c) 2010-2013 Kontron Europe GmbH
+ * Copyright (c) 2010-2017 Kontron Europe GmbH
  * Author: Michael Brunner <michael.brunner@kontron.com>
  *
  * The driver is based on the i2c-ocores driver by Peter Korsgaard.
@@ -46,8 +46,10 @@
 #define I2C_CMD_READ_NACK	0x29
 #define I2C_CMD_IACK		0x01
 
-#define KEMPLD_I2C_FREQ_MAX	2700	/* 2.7 mHz */
-#define KEMPLD_I2C_FREQ_STD	100	/* 100 kHz */
+#define KEMPLD_I2C_FREQ_MAX_LPC_33MHZ	2700	/* 2.70 mHz, LPC@33.3MHz */
+#define KEMPLD_I2C_FREQ_MAX_LPC_25MHZ	2080	/* 2.08 mHz, LPC@25.0MHz */
+#define KEMPLD_I2C_FREQ_MAX_LPC_24MHZ	2000	/* 2.00 mHz, LPC@24.0MHz */
+#define KEMPLD_I2C_FREQ_STD     	100	/* 100  kHz */
 
 enum {
 	STATE_DONE = 0,
@@ -231,6 +233,7 @@ static int kempld_i2c_xfer(struct i2c_adapter *adap, struct i2c_msg *msgs,
 static void kempld_i2c_device_init(struct kempld_i2c_data *i2c)
 {
 	struct kempld_device_data *pld = i2c->pld;
+	struct device *dev = i2c->dev;
 	u16 prescale_corr;
 	long prescale;
 	u8 ctrl;
@@ -242,8 +245,15 @@ static void kempld_i2c_device_init(struct kempld_i2c_data *i2c)
 	ctrl &= ~(I2C_CTRL_EN | I2C_CTRL_IEN);
 	kempld_write8(pld, KEMPLD_I2C_CTRL, ctrl);
 
-	if (bus_frequency > KEMPLD_I2C_FREQ_MAX)
-		bus_frequency = KEMPLD_I2C_FREQ_MAX;
+	if (pld->pld_clock == KEMPLD_CLK)
+		if (bus_frequency > KEMPLD_I2C_FREQ_MAX_LPC_33MHZ)
+			bus_frequency = KEMPLD_I2C_FREQ_MAX_LPC_33MHZ;
+	else if (pld->pld_clock == KEMPLD_CLK_25_MHZ)
+		if (bus_frequency > KEMPLD_I2C_FREQ_MAX_LPC_25MHZ)
+			bus_frequency = KEMPLD_I2C_FREQ_MAX_LPC_25MHZ;
+	else if (pld->pld_clock == KEMPLD_CLK_24_MHZ)
+		if (bus_frequency > KEMPLD_I2C_FREQ_MAX_LPC_24MHZ)
+			bus_frequency = KEMPLD_I2C_FREQ_MAX_LPC_24MHZ;
 
 	if (pld->info.spec_major == 1)
 		prescale = pld->pld_clock / (bus_frequency * 5) - 1000;
@@ -264,9 +274,14 @@ static void kempld_i2c_device_init(struct kempld_i2c_data *i2c)
 	/* Activate I2C bus output on GPIO pins */
 	cfg = kempld_read8(pld, KEMPLD_CFG);
 	if (i2c_gpio_mux)
+	{
+		dev_info(dev, "i2c_gpio_mux: I2C output on GPIO pins is not supported\n");
 		cfg |= KEMPLD_CFG_GPIO_I2C_MUX;
+	}
 	else
+	{
 		cfg &= ~KEMPLD_CFG_GPIO_I2C_MUX;
+	}
 	kempld_write8(pld, KEMPLD_CFG, cfg);
 
 	/* Enable the device */
-- 
1.9.1

