/*
 * Copyright 2012 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/input/input.h>
#include <dt-bindings/gpio/gpio.h>

/ {
        soc {
            busfreq {
                status = "disabled";
            };
        };

	memory: memory {
		reg = <0x10000000 0x40000000>;
	};

	regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			gpio = <&gpio3 22 0>;
			enable-active-high;
		};
	};

	v4l2_out {
		compatible = "fsl,mxc_v4l2_output";
		status = "okay";
	};

	gpio-poweroff {
		compatible = "gpio-poweroff";
		gpios = <&gpio1 2 GPIO_ACTIVE_LOW>;
	};
};

&cpu0 {
	arm-supply = <&sw1a_reg>;
	soc-supply = <&sw1c_reg>;
};

&clks {
	fsl,ldb-di0-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
	fsl,ldb-di1-parent = <&clks IMX6QDL_CLK_PLL2_PFD0_352M>;
};

&ecspi1 {
        fsl,spi-num-chipselects = <1>;
        cs-gpios = <&gpio2 30 0>;
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_ecspi1>;
        status = "okay";
        flash: m25p80@0 {
                #address-cells = <1>;
                #size-cells = <1>;
                compatible = "micron,n25q128a13";
                spi-max-frequency = <20000000>;
                reg = <0>;

                partition@0 {
                        reg = <0x0 0xc0000>;
                        label = "u-boot-not-used";
                };
                partition@c0000 {
                        reg = <0xc0000 0x20000>;
                        label = "u-boot-env-not-used";
                };
                partition@e0000 {
                        reg = <0xe0000 0x10000>;
                        label = "production";
                };
                partition@f0000 {
                        reg = <0xf0000 0x10000>;
                        label = "devid";
                };
                partition@100000 {
                        reg = <0x100000 0xF00000>;
                        label = "spare";
                };
        };
};

&i2c1 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c1>;
	status = "okay";
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

        pmic: pfuze100@08 {
                compatible = "fsl,pfuze100";
                reg = <0x08>;
                regulators {
                        sw1a_reg: sw1ab {
                                regulator-min-microvolt = <300000>;
                                regulator-max-microvolt = <1875000>;
                                regulator-boot-on;
                                regulator-always-on;
                                regulator-ramp-delay = <6250>;
                        };

                        sw1c_reg: sw1c {
                                regulator-min-microvolt = <300000>;
                                regulator-max-microvolt = <1875000>;
                                regulator-boot-on;
                                regulator-always-on;
                                regulator-ramp-delay = <6250>;
                        };

                        sw2_reg: sw2 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        sw3a_reg: sw3a {
                                regulator-min-microvolt = <400000>;
                                regulator-max-microvolt = <1200000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        sw3b_reg: sw3b {
                                regulator-min-microvolt = <400000>;
                                regulator-max-microvolt = <1200000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        sw4_reg: sw4 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <1800000>;
                                regulator-boot-on;
                                regulator-always-on;

                        };

                        swbst_reg: swbst {
                                regulator-min-microvolt = <5000000>;
                                regulator-max-microvolt = <5150000>;
                                regulator-boot-on;
                                regulator-always-on;

                        };

                        snvs_reg: vsnvs {
                                regulator-min-microvolt = <1000000>;
                                regulator-max-microvolt = <3000000>;
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        vref_reg: vrefddr {
                                regulator-boot-on;
                                regulator-always-on;
                        };

                        vgen1_reg: vgen1 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <1550000>;
                                regulator-always-on;
                        };

                        vgen2_reg: vgen2 {
                                regulator-min-microvolt = <800000>;
                                regulator-max-microvolt = <1550000>;
                                regulator-always-on;
                        };

                        vgen3_reg: vgen3 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <2800000>;
                                regulator-always-on;
                        };

                        vgen4_reg: vgen4 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <2800000>;
                                regulator-always-on;
                        };

                        vgen5_reg: vgen5 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3300000>;
                                regulator-always-on;
                        };

                        vgen6_reg: vgen6 {
                                regulator-min-microvolt = <1800000>;
                                regulator-max-microvolt = <3150000>;
                                regulator-always-on;
                        };
                };
        };
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx6qdl-sabresd {
		pinctrl_hog: hoggrp {
			fsl,pins = <

				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 0x80000000
				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15 0x80000000
				MX6QDL_PAD_KEY_COL2__GPIO4_IO10 0x80000000
				MX6QDL_PAD_EIM_EB2__GPIO2_IO30 0x80000000
				MX6QDL_PAD_EIM_D22__GPIO3_IO22  0x80000000
				
/*
				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 0x80000000
				MX6QDL_PAD_NANDF_D1__GPIO2_IO01 0x80000000
				//MX6QDL_PAD_GPIO_0__CCM_CLKO1    0x130b0
				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07 0x80000000
				MX6QDL_PAD_NANDF_ALE__GPIO6_IO08 0x80000000
				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x80000000
				MX6QDL_PAD_EIM_D22__GPIO3_IO22  0x80000000
				MX6QDL_PAD_ENET_CRS_DV__GPIO1_IO25 0x80000000
				MX6QDL_PAD_EIM_D26__GPIO3_IO26 0x80000000
				MX6QDL_PAD_EIM_CS1__GPIO2_IO24 0x80000000
				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000
				MX6QDL_PAD_EIM_A25__GPIO5_IO02 0x80000000
				MX6QDL_PAD_EIM_D23__GPIO3_IO23 0x80000000
				MX6QDL_PAD_EIM_EB3__GPIO2_IO31 0x80000000
				MX6QDL_PAD_SD3_RST__GPIO7_IO08	0x80000000
				MX6QDL_PAD_GPIO_9__GPIO1_IO09 	0x80000000
				MX6QDL_PAD_EIM_DA9__GPIO3_IO09 0x80000000
				MX6QDL_PAD_SD1_DAT3__WDOG2_B 0x80000000
				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11 0x80000000
				//MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15 0x80000000
				MX6QDL_PAD_GPIO_4__GPIO1_IO04   0x80000000
				MX6QDL_PAD_GPIO_2__GPIO1_IO02   0x80000000
				MX6QDL_PAD_EIM_EB2__GPIO2_IO30 0x80000000
				MX6QDL_PAD_NANDF_CS0__GPIO6_IO11 0x80000000
				//TOUCH RESET
				MX6QDL_PAD_KEY_COL2__GPIO4_IO10 0x80000000
				//TOUCH_INTERRUPT
				MX6QDL_PAD_NANDF_CS1__GPIO6_IO14 0x80000000
			
//				//camera
//				MX6QDL_PAD_GPIO_0__GPIO1_IO00  		  0x10881 //0x13059//0x10881   
				//MX6QDL_PAD_CSI0_DAT19__GPIO6_IO05       0x80000000//0x17059//0x10881
*/
			>;
		};

		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D17__ECSPI1_MISO 0x100b1
				MX6QDL_PAD_EIM_D18__ECSPI1_MOSI 0x100b1
				MX6QDL_PAD_EIM_D16__ECSPI1_SCLK 0x100b1
			>;
		};

		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT8__I2C1_SDA		0x4001b8b1
				MX6QDL_PAD_CSI0_DAT9__I2C1_SCL		0x4001b8b1
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL		0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA		0x4001b8b1
			 >;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_3__I2C3_SCL		0x4001b8b1
				MX6QDL_PAD_GPIO_6__I2C3_SDA		0x4001b8b1
			>;
		};

#if 0
		pinctrl_pwm4: pwm4grp {
                        fsl,pins = <
                                MX6QDL_PAD_SD1_CMD__PWM4_OUT            0x1b0b1
                        >;
                };
#endif

		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA	0x1b0b1
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA	0x1b0b1
			>;
		};

		pinctrl_uart2: uart2grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D26__UART2_TX_DATA 0x1b0b1
				MX6QDL_PAD_EIM_D27__UART2_RX_DATA 0x1b0b1
			>;
		};

		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D25__UART3_RX_DATA 0x1b0b1
				MX6QDL_PAD_EIM_D24__UART3_TX_DATA 0x1b0b1
				MX6QDL_PAD_EIM_D23__UART3_CTS_B   0x1b0b1
				MX6QDL_PAD_EIM_D31__UART3_RTS_B   0x1b0b1
			>;
		};

		pinctrl_usbotg: usbotggrp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_1__USB_OTG_ID		0x17059
			>;
		};

		pinctrl_usdhc1: usdhc1grp {
			fsl,pins = <
				MX6QDL_PAD_SD1_CMD__SD1_CMD		0x17059
				MX6QDL_PAD_SD1_CLK__SD1_CLK		0x10059
				MX6QDL_PAD_SD1_DAT0__SD1_DATA0		0x17059
				MX6QDL_PAD_SD1_DAT1__SD1_DATA1		0x17059
				MX6QDL_PAD_SD1_DAT2__SD1_DATA2		0x17059
				MX6QDL_PAD_SD1_DAT3__SD1_DATA3		0x17059
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
				MX6QDL_PAD_SD2_CMD__SD2_CMD		0x17059
				MX6QDL_PAD_SD2_CLK__SD2_CLK		0x10059
				MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
				MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
				MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
				MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
				MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10059
				MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
				MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
				MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
				MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
			>;
		};

		pinctrl_wdog: wdoggrp {
			fsl,pins = <
				MX6QDL_PAD_DISP0_DAT9__WDOG2_B		0x80000000
			>;
		};

	};
};

&gpc {
	/* use ldo-bypass, u-boot will check it and configure */
	fsl,ldo-bypass = <1>;
	fsl,wdog-reset = <2>;
};

#if 0
&pwm4 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_pwm4>;
        status = "okay";
};
#endif

&uart2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart2>;
	status = "okay";
};

&uart3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart3>;
	fsl,uart-has-rtscts;
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	disable-over-current;
	srp-disable;
	hnp-disable;
	adp-disable;
	status = "okay";
};

&usdhc1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc1>;
        bus-width = <4>;
	cd-gpios = <&gpio1 3 GPIO_ACTIVE_LOW>;
#if 0
	cd-inverted;
#endif
        no-1-8-v;
	status = "okay";
};

&wdog1 {
	status = "disabled";
};

&wdog2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_wdog>;
	fsl,wdog_b;
	status = "okay";
};
