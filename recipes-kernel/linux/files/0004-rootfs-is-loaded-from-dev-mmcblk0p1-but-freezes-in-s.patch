From 255ef81b3ece85da9fc1941e653d6d6c73144327 Mon Sep 17 00:00:00 2001
From: Frank Bauernoeppel <frank@bauernoeppel.de>
Date: Wed, 18 Sep 2013 21:40:49 +0200
Subject: [PATCH 4/4] rootfs is loaded from /dev/mmcblk0p1 (but freezes in
 systemd)

---
 arch/arm/configs/dres0280_defconfig    |    2 +-
 arch/arm/mach-mx6/board-mx6_dres0280.c |  420 +++++++++++---------------------
 arch/arm/mach-mx6/pads-mx6_dres0280.h  |  260 +++++++-------------
 arch/arm/tools/mach-types              |    2 +-
 4 files changed, 235 insertions(+), 449 deletions(-)

diff --git a/arch/arm/configs/dres0280_defconfig b/arch/arm/configs/dres0280_defconfig
index 2a4ccc6..bfbfa31 100644
--- a/arch/arm/configs/dres0280_defconfig
+++ b/arch/arm/configs/dres0280_defconfig
@@ -15,7 +15,7 @@ CONFIG_ARCH_MXC=y
 CONFIG_GPIO_PCA953X=y
 CONFIG_ARCH_MX6=y
 CONFIG_FORCE_MAX_ZONEORDER=14
-CONFIG_MACH_MX6_NITROGEN6X=y
+CONFIG_MACH_MX6_DRES0280=y
 CONFIG_IMX_PCIE=y
 CONFIG_PCIE_FORCE_GEN1=y
 CONFIG_USB_EHCI_ARC_H1=y
diff --git a/arch/arm/mach-mx6/board-mx6_dres0280.c b/arch/arm/mach-mx6/board-mx6_dres0280.c
index c4b9a73..28cf180 100644
--- a/arch/arm/mach-mx6/board-mx6_dres0280.c
+++ b/arch/arm/mach-mx6/board-mx6_dres0280.c
@@ -123,8 +123,8 @@
 #define N6_EN_PADCFG		(PAD_CTL_SPEED_MED | PAD_CTL_DSE_40ohm)
 
 #include "pads-mx6_dres0280.h"
-//#define FOR_DL_SOLO
-//#include "pads-mx6_nitrogen6x.h"
+#define FOR_DL_SOLO
+#include "pads-mx6_dres0280.h"
 
 void __init early_console_setup(unsigned long base, struct clk *clk);
 static struct clk *sata_clk;
@@ -161,26 +161,6 @@ struct gpio n6w_wl1271_gpios[] __initdata = {
 	{.label = "wl1271_wl_en",	.gpio = N6_WL1271_WL_EN,	.flags = 0},
 };
 
-__init static int is_nitrogen6w(void)
-{
-	int ret = gpio_request_array(n6w_wl1271_gpios,
-			ARRAY_SIZE(n6w_wl1271_gpios));
-	if (ret) {
-		printk(KERN_ERR "%s gpio_request_array failed("
-				"%d) for n6w_wl1271_gpios\n", __func__, ret);
-		return ret;
-	}
-	ret = gpio_get_value(N6_WL1271_WL_IRQ);
-	if (ret <= 0) {
-		/* Sabrelite, not nitrogen6w */
-		gpio_free(N6_WL1271_WL_IRQ);
-		gpio_free(N6_WL1271_WL_EN);
-		gpio_free(N6_WL1271_BT_EN);
-		ret = 0;
-	}
-	return ret;
-}
-
 enum sd_pad_mode {
 	SD_PAD_MODE_LOW_SPEED,
 	SD_PAD_MODE_MED_SPEED,
@@ -217,34 +197,17 @@ static int plt_sd_pad_change(unsigned int index, int clock)
 	return IOMUX_SETUP(sd_pads[i]);
 }
 
-static void sdio_set_power(int on)
-{
-	pr_debug("%s:%s: set power(%d)\n",
-		 __FILE__, __func__, on);
-	gpio_set_value(N6_WL1271_WL_EN,on);
-}
-
-#ifdef CONFIG_WL12XX_PLATFORM_DATA
-static struct esdhc_platform_data sd2_data = {
+static struct esdhc_platform_data sd1_data = {
 	.always_present = 1,
 	.cd_gpio = -1,
 	.wp_gpio = -1,
-	.keep_power_at_suspend = 0,
-	.caps = MMC_CAP_POWER_OFF_CARD,
-	.platform_pad_change = plt_sd_pad_change,
-	.set_power = sdio_set_power,
-};
-#endif
-
-static struct esdhc_platform_data sd3_data = {
-	.cd_gpio = GP_SD3_CD,
-	.wp_gpio = GP_SD3_WP,
 	.keep_power_at_suspend = 1,
 	.platform_pad_change = plt_sd_pad_change,
 };
 
-static const struct esdhc_platform_data sd4_data __initconst = {
-	.cd_gpio = GP_SD4_CD,
+static const struct esdhc_platform_data sd3_data __initconst = {
+	.always_present = 1,
+	.cd_gpio = -1,
 	.wp_gpio = -1,
 	.keep_power_at_suspend = 1,
 	.platform_pad_change = plt_sd_pad_change,
@@ -255,10 +218,6 @@ static const struct anatop_thermal_platform_data
 		.name = "anatop_thermal",
 };
 
-static const struct imxuart_platform_data mx6_arm2_uart2_data __initconst = {
-	.flags      = IMXUART_HAVE_RTSCTS,
-};
-
 #if !(defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE))
 static const struct imxuart_platform_data mx6_arm2_uart3_data __initconst = {
 	.flags      = IMXUART_HAVE_RTSCTS,
@@ -431,19 +390,19 @@ static struct platform_device audio_device = {
 	.name = "imx-sgtl5000",
 };
 
-static struct imxi2c_platform_data i2c_data = {
-	.bitrate = 100000,
-};
+//~ static struct imxi2c_platform_data i2c_data = {
+	//~ .bitrate = 100000,
+//~ };
 
-static struct i2c_board_info mxc_i2c0_board_info[] __initdata = {
-	{
-		I2C_BOARD_INFO("sgtl5000", 0x0a),
-	},
-	{
-		I2C_BOARD_INFO("isl1208", 0x6f),	/* Real time clock */
-		.irq = gpio_to_irq(IMX_GPIO_NR(6, 7)),	/* NANDF_CLE */
-	},
-};
+//~ static struct i2c_board_info mxc_i2c0_board_info[] __initdata = {
+	//~ {
+		//~ //I2C_BOARD_INFO("sgtl5000", 0x0a),
+	//~ },
+	//~ {
+		//~ //I2C_BOARD_INFO("isl1208", 0x6f),	/* Real time clock */
+		//~ //.irq = gpio_to_irq(IMX_GPIO_NR(6, 7)),	/* NANDF_CLE */
+	//~ },
+//~ };
 
 static void camera_reset(int power_gp, int poweroff_level, int reset_gp, int reset_gp2)
 {
@@ -469,60 +428,60 @@ static void camera_reset(int power_gp, int poweroff_level, int reset_gp, int res
 
 
 #if defined(CONFIG_MXC_CAMERA_OV5640_MIPI) || defined(CONFIG_MXC_CAMERA_OV5640_MIPI_MODULE)
-/*
- * (ov5640 Mipi) - J16
- * NANDF_WP_B	GPIO[6]:9	Nitrogen6x - power down, SOM - NC
- * NANDF_D5 	GPIO[2]:5	Nitrogen6x/SOM - CSI0 reset
- * NANDF_CS0	GPIO[6]:11	reset, old rev SOM jumpered
- * SD1_DAT1	GPIO[1]:16	24 Mhz XCLK/XVCLK (pwm3)
- */
-struct pwm_device	*mipi_pwm;
-
-static void ov5640_mipi_camera_io_init(void)
-{
-	IOMUX_SETUP(mipi_pads);
-
-	pr_info("%s\n", __func__);
-	mipi_pwm = pwm_request(2, "mipi_clock");
-	if (IS_ERR(mipi_pwm)) {
-		pr_err("unable to request PWM for mipi_clock\n");
-	} else {
-		unsigned period = 1000/22;
-		pr_info("got pwm for mipi_clock\n");
-		pwm_config(mipi_pwm, period >> 1, period);
-		pwm_enable(mipi_pwm);
-	}
-
-	camera_reset(IMX_GPIO_NR(6, 9), 1, IMX_GPIO_NR(2, 5), IMX_GPIO_NR(6, 11));
-/* for mx6dl, mipi virtual channel 1 connect to csi 1*/
-	if (cpu_is_mx6dl())
-		mxc_iomux_set_gpr_register(13, 3, 3, 1);
-}
-
-static void ov5640_mipi_camera_powerdown(int powerdown)
-{
-	if (!IS_ERR(mipi_pwm)) {
-		if (powerdown) {
-			pwm_disable(mipi_pwm);
-		} else {
-			unsigned period = 1000/24;
-			pwm_config(mipi_pwm, period >> 1, period);
-			pwm_enable(mipi_pwm);
-		}
-	}
-	pr_info("%s: powerdown=%d, power_gp=0x%x\n",
-			__func__, powerdown, IMX_GPIO_NR(6, 9));
-	gpio_set_value(IMX_GPIO_NR(6, 9), powerdown ? 1 : 0);
-	if (!powerdown)
-		msleep(2);
-}
-
-static struct fsl_mxc_camera_platform_data ov5640_mipi_data = {
-	.mclk = 22000000,
-	.csi = 0,
-	.io_init = ov5640_mipi_camera_io_init,
-	.pwdn = ov5640_mipi_camera_powerdown,
-};
+//~ /*
+ //~ * (ov5640 Mipi) - J16
+ //~ * NANDF_WP_B	GPIO[6]:9	Nitrogen6x - power down, SOM - NC
+ //~ * NANDF_D5 	GPIO[2]:5	Nitrogen6x/SOM - CSI0 reset
+ //~ * NANDF_CS0	GPIO[6]:11	reset, old rev SOM jumpered
+ //~ * SD1_DAT1	GPIO[1]:16	24 Mhz XCLK/XVCLK (pwm3)
+ //~ */
+//~ struct pwm_device	*mipi_pwm;
+
+//~ static void ov5640_mipi_camera_io_init(void)
+//~ {
+	//~ IOMUX_SETUP(mipi_pads);
+
+	//~ pr_info("%s\n", __func__);
+	//~ mipi_pwm = pwm_request(2, "mipi_clock");
+	//~ if (IS_ERR(mipi_pwm)) {
+		//~ pr_err("unable to request PWM for mipi_clock\n");
+	//~ } else {
+		//~ unsigned period = 1000/22;
+		//~ pr_info("got pwm for mipi_clock\n");
+		//~ pwm_config(mipi_pwm, period >> 1, period);
+		//~ pwm_enable(mipi_pwm);
+	//~ }
+
+	//~ camera_reset(IMX_GPIO_NR(6, 9), 1, IMX_GPIO_NR(2, 5), IMX_GPIO_NR(6, 11));
+//~ /* for mx6dl, mipi virtual channel 1 connect to csi 1*/
+	//~ if (cpu_is_mx6dl())
+		//~ mxc_iomux_set_gpr_register(13, 3, 3, 1);
+//~ }
+
+//~ static void ov5640_mipi_camera_powerdown(int powerdown)
+//~ {
+	//~ if (!IS_ERR(mipi_pwm)) {
+		//~ if (powerdown) {
+			//~ pwm_disable(mipi_pwm);
+		//~ } else {
+			//~ unsigned period = 1000/24;
+			//~ pwm_config(mipi_pwm, period >> 1, period);
+			//~ pwm_enable(mipi_pwm);
+		//~ }
+	//~ }
+	//~ pr_info("%s: powerdown=%d, power_gp=0x%x\n",
+			//~ __func__, powerdown, IMX_GPIO_NR(6, 9));
+	//~ gpio_set_value(IMX_GPIO_NR(6, 9), powerdown ? 1 : 0);
+	//~ if (!powerdown)
+		//~ msleep(2);
+//~ }
+
+//~ static struct fsl_mxc_camera_platform_data ov5640_mipi_data = {
+	//~ .mclk = 22000000,
+	//~ .csi = 0,
+	//~ .io_init = ov5640_mipi_camera_io_init,
+	//~ .pwdn = ov5640_mipi_camera_powerdown,
+//~ };
 #endif
 
 #if defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE)
@@ -598,63 +557,63 @@ static struct fsl_mxc_tvin_platform_data adv7180_data = {
 	.csi = 1,
 };
 
-static struct i2c_board_info mxc_i2c1_board_info[] __initdata = {
-	{
-		I2C_BOARD_INFO("mxc_hdmi_i2c", 0x50),
-	},
-#if defined(CONFIG_MXC_CAMERA_OV5640_MIPI) || defined(CONFIG_MXC_CAMERA_OV5640_MIPI_MODULE)
-	{
-		I2C_BOARD_INFO("ov5640_mipi", 0x3c),
-		.platform_data = (void *)&ov5640_mipi_data,
-	},
-#endif
-#if defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE)
-	{
-		I2C_BOARD_INFO("ov5642", 0x3c),
-		.platform_data = (void *)&ov5642_data,
-	},
-#endif
-};
-
-static struct tsc2007_platform_data tsc2007_info = {
-	.model			= 2004,
-	.x_plate_ohms		= 500,
-};
-
-static struct fsl_mxc_lcd_platform_data adv7391_data = {
-	.ipu_id = 0,
-	.disp_id = 0,
-	.default_ifmt = IPU_PIX_FMT_BT656,
-};
-
-
-static struct i2c_board_info mxc_i2c2_board_info[] __initdata = {
-	{
-		I2C_BOARD_INFO("egalax_ts", 0x4),
-		.irq = gpio_to_irq(GP_CAP_TCH_INT1),
-	},
-	{
-		I2C_BOARD_INFO("tsc2004", 0x48),
-		.platform_data	= &tsc2007_info,
-		.irq = gpio_to_irq(GP_DRGB_IRQGPIO),
-	},
-#if defined(CONFIG_TOUCHSCREEN_FT5X06) \
-	|| defined(CONFIG_TOUCHSCREEN_FT5X06_MODULE)
-	{
-		I2C_BOARD_INFO("ft5x06-ts", 0x38),
-		.irq = gpio_to_irq(GP_CAP_TCH_INT1),
-	},
-#endif
-	{
-		I2C_BOARD_INFO("mxc_adv739x", 0x2a),
-		.platform_data = (void *)&adv7391_data,
-	},
-	{
-		I2C_BOARD_INFO("adv7180", 0x20),
-		.platform_data = (void *)&adv7180_data,
-		.irq = gpio_to_irq(IMX_GPIO_NR(5, 0)),  /* EIM_WAIT */
-	},
-};
+//~ static struct i2c_board_info mxc_i2c1_board_info[] __initdata = {
+	//~ {
+		//~ //I2C_BOARD_INFO("mxc_hdmi_i2c", 0x50),
+	//~ },
+//~ #if defined(CONFIG_MXC_CAMERA_OV5640_MIPI) || defined(CONFIG_MXC_CAMERA_OV5640_MIPI_MODULE)
+	//~ {
+		//~ //I2C_BOARD_INFO("ov5640_mipi", 0x3c),
+		//~ //.platform_data = (void *)&ov5640_mipi_data,
+	//~ },
+//~ #endif
+//~ #if defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE)
+	//~ {
+		//~ //I2C_BOARD_INFO("ov5642", 0x3c),
+		//~ //.platform_data = (void *)&ov5642_data,
+	//~ },
+//~ #endif
+//~ };
+
+//~ static struct tsc2007_platform_data tsc2007_info = {
+	//~ .model			= 2004,
+	//~ .x_plate_ohms		= 500,
+//~ };
+
+//~ static struct fsl_mxc_lcd_platform_data adv7391_data = {
+	//~ .ipu_id = 0,
+	//~ .disp_id = 0,
+	//~ .default_ifmt = IPU_PIX_FMT_BT656,
+//~ };
+
+
+//~ static struct i2c_board_info mxc_i2c2_board_info[] __initdata = {
+	//~ {
+		//~ I2C_BOARD_INFO("egalax_ts", 0x4),
+		//~ .irq = gpio_to_irq(GP_CAP_TCH_INT1),
+	//~ },
+	//~ {
+		//~ I2C_BOARD_INFO("tsc2004", 0x48),
+		//~ .platform_data	= &tsc2007_info,
+		//~ .irq = gpio_to_irq(GP_DRGB_IRQGPIO),
+	//~ },
+//~ #if defined(CONFIG_TOUCHSCREEN_FT5X06) \
+	//~ || defined(CONFIG_TOUCHSCREEN_FT5X06_MODULE)
+	//~ {
+		//~ I2C_BOARD_INFO("ft5x06-ts", 0x38),
+		//~ .irq = gpio_to_irq(GP_CAP_TCH_INT1),
+	//~ },
+//~ #endif
+	//~ {
+		//~ I2C_BOARD_INFO("mxc_adv739x", 0x2a),
+		//~ .platform_data = (void *)&adv7391_data,
+	//~ },
+	//~ {
+		//~ I2C_BOARD_INFO("adv7180", 0x20),
+		//~ .platform_data = (void *)&adv7180_data,
+		//~ .irq = gpio_to_irq(IMX_GPIO_NR(5, 0)),  /* EIM_WAIT */
+	//~ },
+//~ };
 
 static void usbotg_vbus(bool on)
 {
@@ -994,57 +953,9 @@ static void __init add_device_buttons(void)
 }
 #endif
 
-#ifdef CONFIG_WL12XX_PLATFORM_DATA
-static void wl1271_set_power(bool enable)
-{
-	if (0 == enable) {
-		gpio_set_value(N6_WL1271_WL_EN, 0);		/* momentarily disable */
-		mdelay(2);
-		gpio_set_value(N6_WL1271_WL_EN, 1);
-	}
-}
-
-struct wl12xx_platform_data n6q_wlan_data __initdata = {
-	.irq = gpio_to_irq(N6_WL1271_WL_IRQ),
-	.board_ref_clock = WL12XX_REFCLOCK_38, /* 38.4 MHz */
-	.set_power = wl1271_set_power,
-};
-
-static struct regulator_consumer_supply n6q_vwl1271_consumers[] = {
-	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.1"),
-};
-
-static struct regulator_init_data n6q_vwl1271_init = {
-	.constraints            = {
-		.name           = "VDD_1.8V",
-		.valid_ops_mask = REGULATOR_CHANGE_STATUS,
-	},
-	.num_consumer_supplies = ARRAY_SIZE(n6q_vwl1271_consumers),
-	.consumer_supplies = n6q_vwl1271_consumers,
-};
-
-static struct fixed_voltage_config n6q_vwl1271_reg_config = {
-	.supply_name		= "vwl1271",
-	.microvolts		= 1800000, /* 1.80V */
-	.gpio			= N6_WL1271_WL_EN,
-	.startup_delay		= 70000, /* 70ms */
-	.enable_high		= 1,
-	.enabled_at_boot	= 0,
-	.init_data		= &n6q_vwl1271_init,
-};
-
-static struct platform_device n6q_vwl1271_reg_devices = {
-	.name	= "reg-fixed-voltage",
-	.id	= 4,
-	.dev	= {
-		.platform_data = &n6q_vwl1271_reg_config,
-	},
-};
-#endif
-
 static struct regulator_consumer_supply vmmc_consumers[] = {
+	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.0"),
 	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.2"),
-	REGULATOR_SUPPLY("vmmc", "sdhci-esdhc-imx.3"),
 };
 
 static struct regulator_init_data vmmc_init = {
@@ -1242,21 +1153,9 @@ static void __init board_init(void)
 	struct clk *clko2;
 	struct clk *new_parent;
 	int rate;
-	int isn6 ;
 
 	IOMUX_SETUP(common_pads);
 
-	isn6 = is_nitrogen6w();
-	if (isn6) {
-		audio_data.ext_port = 3;
-		sd3_data.wp_gpio = -1 ;
-		IOMUX_SETUP(nitrogen6x_pads);
-	} else {
-		IOMUX_SETUP(sabrelite_pads);
-	}
-	printk(KERN_ERR "------------ Board type %s\n",
-               isn6 ? "Nitrogen6X/W" : "Sabre Lite");
-
 #ifdef CONFIG_FEC_1588
 	/* Set GPIO_16 input for IEEE-1588 ts_clk and RMII reference clock
 	 * For MX6 GPR1 bit21 meaning:
@@ -1270,15 +1169,8 @@ static void __init board_init(void)
 	soc_reg_id = dvfscore_data.soc_id;
 	pu_reg_id = dvfscore_data.pu_id;
 
-	imx6q_add_imx_uart(0, NULL);
-	imx6q_add_imx_uart(1, NULL);
-	if (isn6)
-		imx6q_add_imx_uart(2, &mx6_arm2_uart2_data);
-
-#if !(defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE))
-	imx6q_add_imx_uart(3, &mx6_arm2_uart3_data);
-	imx6q_add_imx_uart(4, &mx6_arm2_uart4_data);
-#endif
+	imx6q_add_imx_uart(2-1, NULL);
+	imx6q_add_imx_uart(4-1, NULL);
 
 	if (!cpu_is_mx6q()) {
 		ldb_data.ipu_id = 0;
@@ -1315,19 +1207,13 @@ static void __init board_init(void)
 	if (1 == caam_enabled)
 		imx6q_add_imx_caam();
 
-	imx6q_add_imx_i2c(0, &i2c_data);
-	imx6q_add_imx_i2c(1, &i2c_data);
-	imx6q_add_imx_i2c(2, &i2c_data);
-	/*
-	 * SABRE Lite does not have an ISL1208 RTC
-	 */
-	i2c_register_board_info(0, mxc_i2c0_board_info,
-			isn6    ? ARRAY_SIZE(mxc_i2c0_board_info)
-				: ARRAY_SIZE(mxc_i2c0_board_info)-1);
-	i2c_register_board_info(1, mxc_i2c1_board_info,
-			ARRAY_SIZE(mxc_i2c1_board_info));
-	i2c_register_board_info(2, mxc_i2c2_board_info,
-			ARRAY_SIZE(mxc_i2c2_board_info));
+	//imx6q_add_imx_i2c(0, &i2c_data);
+	//imx6q_add_imx_i2c(1, &i2c_data);
+	//imx6q_add_imx_i2c(2, &i2c_data);
+
+	//i2c_register_board_info(0, mxc_i2c0_board_info, ARRAY_SIZE(mxc_i2c0_board_info));
+	//i2c_register_board_info(1, mxc_i2c1_board_info, ARRAY_SIZE(mxc_i2c1_board_info));
+	//i2c_register_board_info(2, mxc_i2c2_board_info, ARRAY_SIZE(mxc_i2c2_board_info));
 
 	/* SPI */
 	imx6q_add_ecspi(0, &spi_data);
@@ -1338,8 +1224,8 @@ static void __init board_init(void)
 	imx6q_add_anatop_thermal_imx(1, &anatop_thermal_data);
 	imx6_init_fec(fec_data);
 	imx6q_add_pm_imx(0, &pm_data);
+	imx6q_add_sdhci_usdhc_imx(0, &sd1_data);
 	imx6q_add_sdhci_usdhc_imx(2, &sd3_data);
-	imx6q_add_sdhci_usdhc_imx(3, &sd4_data);
 	imx_add_viv_gpu(&imx6_gpu_data, &imx6_gpu_pdata);
 	init_usb();
 	if (cpu_is_mx6q())
@@ -1406,26 +1292,6 @@ static void __init board_init(void)
 	clk_enable(clko2);
 	imx6q_add_busfreq();
 
-#ifdef CONFIG_WL12XX_PLATFORM_DATA
-	if (isn6) {
-		imx6q_add_sdhci_usdhc_imx(1, &sd2_data);
-		/* WL12xx WLAN Init */
-		if (wl12xx_set_platform_data(&n6q_wlan_data))
-			pr_err("error setting wl12xx data\n");
-		platform_device_register(&n6q_vwl1271_reg_devices);
-
-		gpio_set_value(N6_WL1271_WL_EN, 1);		/* momentarily enable */
-		gpio_set_value(N6_WL1271_BT_EN, 1);
-		mdelay(2);
-		gpio_set_value(N6_WL1271_WL_EN, 0);
-		gpio_set_value(N6_WL1271_BT_EN, 0);
-
-		gpio_free(N6_WL1271_WL_EN);
-		gpio_free(N6_WL1271_BT_EN);
-		mdelay(1);
-	}
-#endif
-
 	imx6q_add_pcie(&pcie_data);
 
 	imx6q_add_perfmon(0);
@@ -1466,10 +1332,10 @@ static void __init reserve(void)
 }
 
 /*
- * initialize __mach_desc_MX6Q_SABRELITE data structure.
+ * initialize __mach_desc_MX6Q_DRES0280 data structure.
  */
-MACHINE_START(MX6_NITROGEN6X, "Boundary Devices Nitrogen6X/SABRE Lite Board")
-	/* Maintainer: Boundary Devices */
+MACHINE_START(MX6_DRES0280, "DResearch dres0280 board")
+	/* Maintainer: DResearch */
 	.boot_params = MX6_PHYS_OFFSET + 0x100,
 	.fixup = fixup_mxc_board,
 	.map_io = mx6_map_io,
diff --git a/arch/arm/mach-mx6/pads-mx6_dres0280.h b/arch/arm/mach-mx6/pads-mx6_dres0280.h
index ad36d69..b2eb35a2 100644
--- a/arch/arm/mach-mx6/pads-mx6_dres0280.h
+++ b/arch/arm/mach-mx6/pads-mx6_dres0280.h
@@ -56,34 +56,6 @@
 	NP(id, DAT2, pad_ctl),	\
 	NP(id, DAT3, pad_ctl)
 
-static iomux_v3_cfg_t MX6NAME(nitrogen6x_pads)[] = {
-	/* AUDMUX */
-	MX6PAD(CSI0_DAT7__AUDMUX_AUD3_RXD),
-	MX6PAD(CSI0_DAT4__AUDMUX_AUD3_TXC),
-	MX6PAD(CSI0_DAT5__AUDMUX_AUD3_TXD),
-	MX6PAD(CSI0_DAT6__AUDMUX_AUD3_TXFS),
-	NEW_PAD_CTRL(MX6PAD(NANDF_CS1__GPIO_6_14), N6_IRQ_PADCFG),	/* wl1271 wl_irq */
-	/* USDHC2 */
-	SD_PINS(2, USDHC_PAD_CTRL_22KPU_40OHM_50MHZ),
-        MX6PAD(SD1_CLK__OSC32K_32K_OUT), /* wl1271 clock */
-
-	/* UART3 for wl1271 */
-	MX6PAD(EIM_D24__UART3_TXD),
-	MX6PAD(EIM_D25__UART3_RXD),
-	MX6PAD(EIM_D23__UART3_CTS),
-	MX6PAD(EIM_D31__UART3_RTS),
-	0
-};
-
-static iomux_v3_cfg_t MX6NAME(sabrelite_pads)[] = {
-	/* AUDMUX */
-	MX6PAD(SD2_DAT0__AUDMUX_AUD4_RXD),
-	MX6PAD(SD2_DAT3__AUDMUX_AUD4_TXC),
-	MX6PAD(SD2_DAT2__AUDMUX_AUD4_TXD),
-	MX6PAD(SD2_DAT1__AUDMUX_AUD4_TXFS),
-	0
-};
-
 static iomux_v3_cfg_t MX6NAME(common_pads)[] = {
 	/* CAN1  */
 	MX6PAD(KEY_ROW2__CAN1_RXCAN),
@@ -122,16 +94,16 @@ static iomux_v3_cfg_t MX6NAME(common_pads)[] = {
 	MX6PAD(ENET_TX_EN__GPIO_1_28),		/* Micrel RGMII Phy Interrupt */
 
 	/* GPIO1 */
-	MX6PAD(ENET_RX_ER__GPIO_1_24),		/* J9 - Microphone Detect */
+	//MX6PAD(ENET_RX_ER__GPIO_1_24),		/* J9 - Microphone Detect */
 
 	/* GPIO2 */
-	MX6PAD(NANDF_D1__GPIO_2_1),	/* J14 - Menu Button */
-	MX6PAD(NANDF_D2__GPIO_2_2),	/* J14 - Back Button */
-	MX6PAD(NANDF_D3__GPIO_2_3),	/* J14 - Search Button */
-	MX6PAD(NANDF_D4__GPIO_2_4),	/* J14 - Home Button */
+	//MX6PAD(NANDF_D1__GPIO_2_1),	/* J14 - Menu Button */
+	//MX6PAD(NANDF_D2__GPIO_2_2),	/* J14 - Back Button */
+	//MX6PAD(NANDF_D3__GPIO_2_3),	/* J14 - Search Button */
+	//MX6PAD(NANDF_D4__GPIO_2_4),	/* J14 - Home Button */
 
 	/* GPIO4 */
-	MX6PAD(GPIO_19__GPIO_4_5),	/* J14 - Volume Down */
+	//MX6PAD(GPIO_19__GPIO_4_5),	/* J14 - Volume Down */
 
 
 	/* CSI1/Bootmode pins - J12 */
@@ -187,112 +159,68 @@ static iomux_v3_cfg_t MX6NAME(common_pads)[] = {
 	MX6PAD(EIM_DA12__IPU2_CSI1_VSYNC),	/* GPIO3[12] */
 	MX6PAD(EIM_A16__IPU2_CSI1_PIXCLK),	/* GPIO2[22] */
 #endif
-	MX6PAD(EIM_DA13__GPIO_3_13),		/* Power */
-	MX6PAD(EIM_DA14__GPIO_3_14),		/* Reset */
-	MX6PAD(EIM_WAIT__GPIO_5_0),		/* Irq */
-	MX6PAD(EIM_A24__GPIO_5_4),		/* Field */
+	//MX6PAD(EIM_DA13__GPIO_3_13),		/* Power */
+	//MX6PAD(EIM_DA14__GPIO_3_14),		/* Reset */
+	//MX6PAD(EIM_WAIT__GPIO_5_0),		/* Irq */
+	//MX6PAD(EIM_A24__GPIO_5_4),		/* Field */
 
-	MX6PAD(EIM_RW__GPIO_2_26),		/* GPIO2[26] - unused */
-	MX6PAD(EIM_LBA__GPIO_2_27),		/* GPIO2[27] - unused */
-	MX6PAD(EIM_EB3__GPIO_2_31),		/* GPIO2[31] - unused */
-	MX6PAD(EIM_DA15__GPIO_3_15),		/* GPIO3[15] - unused */
+	//MX6PAD(EIM_RW__GPIO_2_26),		/* GPIO2[26] - unused */
+	//MX6PAD(EIM_LBA__GPIO_2_27),		/* GPIO2[27] - unused */
+	//MX6PAD(EIM_EB3__GPIO_2_31),		/* GPIO2[31] - unused */
+	//MX6PAD(EIM_DA15__GPIO_3_15),		/* GPIO3[15] - unused */
 
 	/* NANDF_CS1/2/3 are unused for sabrelite */
-	NEW_PAD_CTRL(MX6PAD(NANDF_CS1__GPIO_6_14), N6_IRQ_TEST_PADCFG),	/* wl1271 wl_irq */
-	NEW_PAD_CTRL(MX6PAD(NANDF_CS2__GPIO_6_15), N6_EN_PADCFG),	/* wl1271 wl_en */
-	NEW_PAD_CTRL(MX6PAD(NANDF_CS3__GPIO_6_16), N6_EN_PADCFG),	/* wl1271 bt_en */
-
-	/* GPIO7 */
-	MX6PAD(GPIO_17__GPIO_7_12),	/* USB Hub Reset */
-	MX6PAD(GPIO_18__GPIO_7_13),	/* J14 - Volume Up */
-
-	/* I2C1, SGTL5000 */
-	MX6PAD(EIM_D21__I2C1_SCL),	/* GPIO3[21] */
-	MX6PAD(EIM_D28__I2C1_SDA),	/* GPIO3[28] */
-
-	/* I2C2 Camera, MIPI */
-	MX6PAD(KEY_COL3__I2C2_SCL),	/* GPIO4[12] */
-	MX6PAD(KEY_ROW3__I2C2_SDA),	/* GPIO4[13] */
-
-	/* I2C3 */
-	MX6PAD(GPIO_5__I2C3_SCL),	/* GPIO1[5] - J7 - Display card */
-#ifdef CONFIG_FEC_1588
-	MX6PAD(GPIO_16__ENET_ANATOP_ETHERNET_REF_OUT),
-#else
-	MX6PAD(GPIO_16__I2C3_SDA),	/* GPIO7[11] - J15 - RGB connector */
-#endif
+	//NEW_PAD_CTRL(MX6PAD(NANDF_CS1__GPIO_6_14), N6_IRQ_TEST_PADCFG),	/* wl1271 wl_irq */
+	//NEW_PAD_CTRL(MX6PAD(NANDF_CS2__GPIO_6_15), N6_EN_PADCFG),	/* wl1271 wl_en */
+	//NEW_PAD_CTRL(MX6PAD(NANDF_CS3__GPIO_6_16), N6_EN_PADCFG),	/* wl1271 bt_en */
+
+	/* I2C1, image sensor */
+	MX6PAD(CSI0_DAT9__I2C1_SCL),
+	MX6PAD(CSI0_DAT8__I2C1_SDA),
 
-	/* DISPLAY */
-	MX6PAD(DI0_DISP_CLK__IPU1_DI0_DISP_CLK),
-	MX6PAD(DI0_PIN15__IPU1_DI0_PIN15),		/* DE */
-	MX6PAD(DI0_PIN2__IPU1_DI0_PIN2),		/* HSync */
-	MX6PAD(DI0_PIN3__IPU1_DI0_PIN3),		/* VSync */
-	NEW_PAD_CTRL(MX6PAD(DI0_PIN4__GPIO_4_20),
-		     WEAK_PULLUP),			/* I2C Touch IRQ */
-	MX6PAD(DISP0_DAT0__IPU1_DISP0_DAT_0),
-	MX6PAD(DISP0_DAT1__IPU1_DISP0_DAT_1),
-	MX6PAD(DISP0_DAT2__IPU1_DISP0_DAT_2),
-	MX6PAD(DISP0_DAT3__IPU1_DISP0_DAT_3),
-	MX6PAD(DISP0_DAT4__IPU1_DISP0_DAT_4),
-	MX6PAD(DISP0_DAT5__IPU1_DISP0_DAT_5),
-	MX6PAD(DISP0_DAT6__IPU1_DISP0_DAT_6),
-	MX6PAD(DISP0_DAT7__IPU1_DISP0_DAT_7),
-	MX6PAD(DISP0_DAT8__IPU1_DISP0_DAT_8),
-	MX6PAD(DISP0_DAT9__IPU1_DISP0_DAT_9),
-	MX6PAD(DISP0_DAT10__IPU1_DISP0_DAT_10),
-	MX6PAD(DISP0_DAT11__IPU1_DISP0_DAT_11),
-	MX6PAD(DISP0_DAT12__IPU1_DISP0_DAT_12),
-	MX6PAD(DISP0_DAT13__IPU1_DISP0_DAT_13),
-	MX6PAD(DISP0_DAT14__IPU1_DISP0_DAT_14),
-	MX6PAD(DISP0_DAT15__IPU1_DISP0_DAT_15),
-	MX6PAD(DISP0_DAT16__IPU1_DISP0_DAT_16),
-	MX6PAD(DISP0_DAT17__IPU1_DISP0_DAT_17),
-	MX6PAD(DISP0_DAT18__IPU1_DISP0_DAT_18),
-	MX6PAD(DISP0_DAT19__IPU1_DISP0_DAT_19),
-	MX6PAD(DISP0_DAT20__IPU1_DISP0_DAT_20),
-	MX6PAD(DISP0_DAT21__IPU1_DISP0_DAT_21),
-	MX6PAD(DISP0_DAT22__IPU1_DISP0_DAT_22),
-	MX6PAD(DISP0_DAT23__IPU1_DISP0_DAT_23),
-	MX6PAD(GPIO_7__GPIO_1_7),		/* J7 - Display Connector GP */
-	MX6PAD(GPIO_9__GPIO_1_9),		/* J7 - Display Connector GP */
-	MX6PAD(NANDF_D0__GPIO_2_0),		/* J6 - LVDS Display contrast */
+	/* I2C2 PMIC PF0100 */
+	MX6PAD(KEY_COL3__I2C2_SCL),
+	MX6PAD(KEY_ROW3__I2C2_SDA),
 
+	/* I2C3 invenSense MPU9150 accel. sensor */
+	MX6PAD(GPIO_3__I2C3_SCL),
+	MX6PAD(GPIO_6__I2C3_SDA),
 
 	/* PWM1 */
-	MX6PAD(SD1_DAT3__PWM1_PWMO),		/* GPIO1[21] */
+	//MX6PAD(SD1_DAT3__PWM1_PWMO),		/* GPIO1[21] */
 
 	/* PWM2 */
-	MX6PAD(SD1_DAT2__PWM2_PWMO),		/* GPIO1[19] */
+	//MX6PAD(SD1_DAT2__PWM2_PWMO),		/* GPIO1[19] */
 
 	/* PWM3 */
-	MX6PAD(SD1_DAT1__PWM3_PWMO),		/* GPIO1[17] */
+	//MX6PAD(SD1_DAT1__PWM3_PWMO),		/* GPIO1[17] */
 
 	/* PWM4 */
-	MX6PAD(SD1_CMD__PWM4_PWMO),		/* GPIO1[18] */
+	//MX6PAD(SD1_CMD__PWM4_PWMO),		/* GPIO1[18] */
 
 	/* RTC ISL1208 irq*/
-	MX6PAD(NANDF_CLE__GPIO_6_7),
+	//MX6PAD(NANDF_CLE__GPIO_6_7),
 
-	/* UART1  */
-	MX6PAD(SD3_DAT7__UART1_TXD),
-	MX6PAD(SD3_DAT6__UART1_RXD),
-
-	/* UART2 for debug */
+	/* UART2 console  */
 	MX6PAD(EIM_D26__UART2_TXD),
 	MX6PAD(EIM_D27__UART2_RXD),
 
+	/* UART2 to base board */
+	MX6PAD(KEY_ROW0__UART4_RXD),
+	MX6PAD(KEY_COL0__UART4_TXD),
+
 #if !(defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE))
 	/* UART4 */
-	MX6PAD(CSI0_DAT12__UART4_TXD),
-	MX6PAD(CSI0_DAT13__UART4_RXD),
-	MX6PAD(CSI0_DAT17__UART4_CTS),
-	MX6PAD(CSI0_DAT16__UART4_RTS),
+	//MX6PAD(CSI0_DAT12__UART4_TXD),
+	//MX6PAD(CSI0_DAT13__UART4_RXD),
+	//MX6PAD(CSI0_DAT17__UART4_CTS),
+	//MX6PAD(CSI0_DAT16__UART4_RTS),
 
 	/* UART5 */
-	MX6PAD(CSI0_DAT14__UART5_TXD),
-	MX6PAD(CSI0_DAT15__UART5_RXD),
-	MX6PAD(CSI0_DAT19__UART5_CTS),
-	MX6PAD(CSI0_DAT18__UART5_RTS),
+	//MX6PAD(CSI0_DAT14__UART5_TXD),
+	//MX6PAD(CSI0_DAT15__UART5_RXD),
+	//MX6PAD(CSI0_DAT19__UART5_CTS),
+	//MX6PAD(CSI0_DAT18__UART5_RTS),
 #endif
 
 	/* USBOTG ID pin */
@@ -302,60 +230,58 @@ static iomux_v3_cfg_t MX6NAME(common_pads)[] = {
 	MX6PAD(KEY_COL4__USBOH3_USBOTG_OC),
 	MX6PAD(EIM_D30__USBOH3_USBH1_OC),
 
-	/* SDHC2 (WiFi) */
-	/* USDHC2 */
-	MX6PAD(SD2_CLK__USDHC2_CLK),
-	MX6PAD(SD2_CMD__USDHC2_CMD),
-	MX6PAD(SD2_DAT0__USDHC2_DAT0),
-	MX6PAD(SD2_DAT1__USDHC2_DAT1),
-	MX6PAD(SD2_DAT2__USDHC2_DAT2),
-	MX6PAD(SD2_DAT3__USDHC2_DAT3),
+	//~ /* SDHC2 (WiFi) */
+	//~ /* USDHC2 */
+	//~ MX6PAD(SD2_CLK__USDHC2_CLK),
+	//~ MX6PAD(SD2_CMD__USDHC2_CMD),
+	//~ MX6PAD(SD2_DAT0__USDHC2_DAT0),
+	//~ MX6PAD(SD2_DAT1__USDHC2_DAT1),
+	//~ MX6PAD(SD2_DAT2__USDHC2_DAT2),
+	//~ MX6PAD(SD2_DAT3__USDHC2_DAT3),
+
+	SD_PINS(1, USDHC_PAD_CTRL_22KPU_40OHM_50MHZ),
 
 	/* USDHC3 */
 	SD_PINS(3, USDHC_PAD_CTRL_50MHZ),
-	MX6PAD(SD3_DAT5__GPIO_7_0),		/* J18 - SD3_CD */
-	NEW_PAD_CTRL(MX6PAD(SD3_DAT4__GPIO_7_1), SD3_WP_PADCFG),
+	//MX6PAD(SD3_DAT5__GPIO_7_0),		/* J18 - SD3_CD */
+	//NEW_PAD_CTRL(MX6PAD(SD3_DAT4__GPIO_7_1), SD3_WP_PADCFG),
 
-	/* USDHC4 */
-	SD_PINS(4, USDHC_PAD_CTRL_50MHZ),
-	MX6PAD(NANDF_D6__GPIO_2_6),		/* J20 - SD4_CD */
-	MX6PAD(NANDF_D7__GPIO_2_7),		/* SD4_WP */
 	0
 };
 
 #if defined(CONFIG_MXC_CAMERA_OV5640_MIPI) || defined(CONFIG_MXC_CAMERA_OV5640_MIPI_MODULE)
-static iomux_v3_cfg_t MX6NAME(mipi_pads)[] = {
-	MX6PAD(NANDF_WP_B__GPIO_6_9),		/* J16 - MIPI Powerdown - Nitrogen6x, SOM is NC */
-	MX6PAD(NANDF_D5__GPIO_2_5),		/* J16 - MIPI camera reset - Nitrogen6x/SOM */
-	MX6PAD(NANDF_CS0__GPIO_6_11),		/* Camera Reset, SOM jumpered */
-	MX6PAD(GPIO_6__GPIO_1_6),		/* Camera GP */
-	0
-};
+//~ static iomux_v3_cfg_t MX6NAME(mipi_pads)[] = {
+	//~ MX6PAD(NANDF_WP_B__GPIO_6_9),		/* J16 - MIPI Powerdown - Nitrogen6x, SOM is NC */
+	//~ MX6PAD(NANDF_D5__GPIO_2_5),		/* J16 - MIPI camera reset - Nitrogen6x/SOM */
+	//~ MX6PAD(NANDF_CS0__GPIO_6_11),		/* Camera Reset, SOM jumpered */
+	//~ MX6PAD(GPIO_6__GPIO_1_6),		/* Camera GP */
+	//~ 0
+//~ };
 #endif
 
 #if defined(CONFIG_MXC_CAMERA_OV5642) || defined(CONFIG_MXC_CAMERA_OV5642_MODULE)
 static iomux_v3_cfg_t MX6NAME(csi0_sensor_pads)[] = {
 	/* IPU1 Camera */
-	MX6PAD(CSI0_DAT8__IPU1_CSI0_D_8),
-	MX6PAD(CSI0_DAT9__IPU1_CSI0_D_9),
-	MX6PAD(CSI0_DAT10__IPU1_CSI0_D_10),
-	MX6PAD(CSI0_DAT11__IPU1_CSI0_D_11),
-	MX6PAD(CSI0_DAT12__IPU1_CSI0_D_12),
-	MX6PAD(CSI0_DAT13__IPU1_CSI0_D_13),
-	MX6PAD(CSI0_DAT14__IPU1_CSI0_D_14),
-	MX6PAD(CSI0_DAT15__IPU1_CSI0_D_15),
-	MX6PAD(CSI0_DAT16__IPU1_CSI0_D_16),
-	MX6PAD(CSI0_DAT17__IPU1_CSI0_D_17),
-	MX6PAD(CSI0_DAT18__IPU1_CSI0_D_18),
-	MX6PAD(CSI0_DAT19__IPU1_CSI0_D_19),
-	MX6PAD(CSI0_DATA_EN__IPU1_CSI0_DATA_EN),
-	MX6PAD(CSI0_MCLK__IPU1_CSI0_HSYNC),
-	MX6PAD(CSI0_PIXCLK__IPU1_CSI0_PIXCLK),
-	MX6PAD(CSI0_VSYNC__IPU1_CSI0_VSYNC),
-	MX6PAD(GPIO_6__GPIO_1_6),		/* J5 - Camera GP */
-	MX6PAD(GPIO_8__GPIO_1_8),		/* J5 - Camera Reset */
-	MX6PAD(NANDF_CS0__GPIO_6_11),		/* J5 - Camera Reset */
-	MX6PAD(SD1_DAT0__GPIO_1_16),		/* J5 - Camera GP */
+	//~ MX6PAD(CSI0_DAT8__IPU1_CSI0_D_8),
+	//~ MX6PAD(CSI0_DAT9__IPU1_CSI0_D_9),
+	//~ MX6PAD(CSI0_DAT10__IPU1_CSI0_D_10),
+	//~ MX6PAD(CSI0_DAT11__IPU1_CSI0_D_11),
+	//~ MX6PAD(CSI0_DAT12__IPU1_CSI0_D_12),
+	//~ MX6PAD(CSI0_DAT13__IPU1_CSI0_D_13),
+	//~ MX6PAD(CSI0_DAT14__IPU1_CSI0_D_14),
+	//~ MX6PAD(CSI0_DAT15__IPU1_CSI0_D_15),
+	//~ MX6PAD(CSI0_DAT16__IPU1_CSI0_D_16),
+	//~ MX6PAD(CSI0_DAT17__IPU1_CSI0_D_17),
+	//~ MX6PAD(CSI0_DAT18__IPU1_CSI0_D_18),
+	//~ MX6PAD(CSI0_DAT19__IPU1_CSI0_D_19),
+	//~ MX6PAD(CSI0_DATA_EN__IPU1_CSI0_DATA_EN),
+	//~ MX6PAD(CSI0_MCLK__IPU1_CSI0_HSYNC),
+	//~ MX6PAD(CSI0_PIXCLK__IPU1_CSI0_PIXCLK),
+	//~ MX6PAD(CSI0_VSYNC__IPU1_CSI0_VSYNC),
+	//~ MX6PAD(GPIO_6__GPIO_1_6),		/* J5 - Camera GP */
+	//~ MX6PAD(GPIO_8__GPIO_1_8),		/* J5 - Camera Reset */
+	//~ MX6PAD(NANDF_CS0__GPIO_6_11),		/* J5 - Camera Reset */
+	//~ MX6PAD(SD1_DAT0__GPIO_1_16),		/* J5 - Camera GP */
 	0
 };
 #endif
@@ -380,15 +306,12 @@ static iomux_v3_cfg_t MX6NAME(mc33902_flexcan_pads)[] = {
 #define MX6_USDHC_PAD_SETTING(id, speed, pad_ctl)	\
 		MX6NAME(sd##id##_##speed##mhz)[] = { SD_PINS(id, pad_ctl), 0 }
 
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(2, 50, USDHC_PAD_CTRL_22KPU_40OHM_50MHZ);
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(2, 100, USDHC_PAD_CTRL_100MHZ);
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(2, 200, USDHC_PAD_CTRL_200MHZ);
+static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(1, 50, USDHC_PAD_CTRL_22KPU_40OHM_50MHZ);
+static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(1, 100, USDHC_PAD_CTRL_100MHZ);
+static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(1, 200, USDHC_PAD_CTRL_200MHZ);
 static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(3, 50, USDHC_PAD_CTRL_50MHZ);
 static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(3, 100, USDHC_PAD_CTRL_100MHZ);
 static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(3, 200, USDHC_PAD_CTRL_200MHZ);
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(4, 50, USDHC_PAD_CTRL_50MHZ);
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(4, 100, USDHC_PAD_CTRL_100MHZ);
-static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(4, 200, USDHC_PAD_CTRL_200MHZ);
 
 #define _50MHZ 0
 #define _100MHZ 1
@@ -396,13 +319,10 @@ static iomux_v3_cfg_t MX6_USDHC_PAD_SETTING(4, 200, USDHC_PAD_CTRL_200MHZ);
 #define SD_SPEED_CNT 3
 static iomux_v3_cfg_t * MX6NAME(sd_pads)[] =
 {
-	MX6NAME(sd2_50mhz),
-	MX6NAME(sd2_100mhz),
-	MX6NAME(sd2_200mhz),
+	MX6NAME(sd1_50mhz),
+	MX6NAME(sd1_100mhz),
+	MX6NAME(sd1_200mhz),
 	MX6NAME(sd3_50mhz),
 	MX6NAME(sd3_100mhz),
 	MX6NAME(sd3_200mhz),
-	MX6NAME(sd4_50mhz),
-	MX6NAME(sd4_100mhz),
-	MX6NAME(sd4_200mhz),
 };
diff --git a/arch/arm/tools/mach-types b/arch/arm/tools/mach-types
index c241052..729592e 100644
--- a/arch/arm/tools/mach-types
+++ b/arch/arm/tools/mach-types
@@ -1125,4 +1125,4 @@ mx6q_arm2		MACH_MX6Q_ARM2		MX6Q_ARM2		3837
 mx6sl_arm2		MACH_MX6SL_ARM2		MX6SL_ARM2		4091
 mx6q_hdmidongle		MACH_MX6Q_HDMIDONGLE    MX6Q_HDMIDONGLE		4284
 mx6sl_evk		MACH_MX6SL_EVK		MX6SL_EVK		4307
-
+mx6_dres0280		MACH_MX6_DRES0280	MX6_DRES0280		9999
-- 
1.7.9.5

